{"version":3,"sources":["Component/WeaponSkill.js","Component/Summons.js","App.js","serviceWorker.js","index.js"],"names":["WeaponSkill","this","props","name","count","onClick","click","bind","index","minusClick","Component","Summons","type","value","onChange","App","state","weaponSkill","skillName","selectedOption","plusClick","e","weaponSkills","slice","console","log","setState","Math","max","handleOnChange","target","i","length","push","key","baseCrit","critChance","className","selected","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df6c91fe.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class WeaponSkill extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.name} : {this.props.count} &nbsp;\r\n                <button onClick={this.props.click.bind(this, this.props.index)}>+</button>\r\n                <button onClick={this.props.minusClick.bind(this, this.props.index)}>-</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeaponSkill\r\n","import React, { Component } from 'react'\r\n\r\nexport class Summons extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"radio\" name=\"summons\" value={3.8}  onChange={this.props.click}/> 2 Primals<br/>\r\n                <input type=\"radio\" name=\"summons\" value={2.4} onChange={this.props.click}/> 1 Primal<br/>\r\n                <input type=\"radio\" name=\"summons\" value={1} onChange={this.props.click}/> 0 Primal<br/>  \r\n                <input type=\"radio\" name=\"summons\" value={3.7} onChange={this.props.click}/> 1 Demikek + 1 Primal<br/>\r\n                <input type=\"radio\" name=\"summons\" value={2.3} onChange={this.props.click}/> 1 Demikek<br/>\r\n                <input type=\"radio\" name=\"summons\" value={2.4} onChange={this.props.click}/> 2 magna<br/>\r\n                <input type=\"radio\" name=\"summons\" value={1.2} onChange={this.props.click}/> 1 magna<br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Summons\r\n","import React from 'react';\nimport './App.css';\nimport WeaponSkill from './Component/WeaponSkill';\nimport Summons from './Component/Summons';\n\nclass App extends React.Component {\n\n  state = {\n    weaponSkill: [\n      {skillName: \"Big SK 20\",\n      count: 0,\n      value: 11},\n      {skillName: \"Big SK 15\",\n      count: 0,\n      value: 10},\n      {skillName: \"Big SK 10\",\n      count: 0,\n      value: 8},\n      {skillName: \"Med SK 15\",\n      count: 0,\n      value: 6.5},  \n      {skillName: \"Med SK 10\",\n      count: 0,\n      value: 5},   \n      {skillName: \"Sml SK 15\",\n      count: 0,\n      value: 3},   \n      {skillName: \"Sml SK 10\",\n      count: 0,\n      value: 2},  \n    ],\n    selectedOption: 0\n  }\n  \n\n\n\n  plusClick = (e) => {\n    var weaponSkills = this.state.weaponSkill.slice()\n    weaponSkills[e].count = weaponSkills[e].count + 1\n    console.log(weaponSkills[e])\n    this.setState({weaponSkill: weaponSkills})\n  }\n\n  minusClick = (e) => {\n    var weaponSkills = this.state.weaponSkill.slice()\n    weaponSkills[e].count = Math.max(weaponSkills[e].count - 1, 0)\n    console.log(weaponSkills[e])\n    this.setState({weaponSkill: weaponSkills})\n  }\n\n  handleOnChange = (e) => {\n\n      this.setState({ selectedOption: e.target.value});\n    \n  \n  }\n  render() {\n    var weaponSkills = [];\n    for (let i = 0; i < this.state.weaponSkill.length; i++) {\n      weaponSkills.push(<WeaponSkill name={this.state.weaponSkill[i].skillName} count={this.state.weaponSkill[i].count} key={i} index={i} click={this.plusClick} minusClick={this.minusClick}></WeaponSkill>)\n    }\n\n    \n      var baseCrit = 0;\n      for (let i = 0; i < this.state.weaponSkill.length; i++) {\n        baseCrit += this.state.weaponSkill[i].count * this.state.weaponSkill[i].value;\n      }\n      \n\n      var critChance = (this.state.selectedOption) ? this.state.selectedOption * baseCrit : 0;\n    \n\n    return (\n      <div className=\"App\">\n        <h2>GBF Crit Calculator Test</h2>\n        {weaponSkills}\n        <Summons click={this.handleOnChange} selected={this.state.selectedOption} ></Summons>\n        <br/>\n        Crit chance : {critChance}\n        <br/>\n        <br/>\n\n        Fuck Tootniggers\n      </div>\n      \n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}